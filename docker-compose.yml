version: '3'
services:
  web:
    container_name: web
    image: nginx:1.13.12-alpine
    restart: always
    ports:
      - "3000:3000"
    networks:
      - bcapp
    build: 
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - web:/usr/share/nginx/html
      - /usr/share/nginx/html
    labels:
      - traefik.backend=whoami
      - traefik.frontend.rule=Host:staging.bcapp
      - traefik.docker.network=bcapp
      - traefik.port=80
  graph:
    container_name: graph
    image: node:8.11.2-alpine
    build: 
      context: ./bcgraph
      dockerfile: ./Dockerfile
    command: npm start
    networks:
      - bcapp 
    restart: always
    environment: 
      SERVER_PORT:
    ports: 
      - '6006:6006'
    volumes:
      - graph:/usr/app/bcgraph
      - /usr/app/
    networks:
      - bcapp 
    labels:
      - traefik.backend=whoami
      - traefik.frontend.rule=Host:whoami.docker.localhost
      - traefik.docker.network=bcapp
      - traefik.port=6006
  proxy:
    container_name: proxy
    image: traefik
    command: --api --docker
    environment:
      PROXY_PORT:
    ports:
      - 8080:8080
    networks:
      - bcapp 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - graph:/usr/app/bcgraph
    networks:
      - bcapp 
    labels:
      - traefik.backend=proxy
      - traefik.frontend.rule=Host:proxy
  whoami:
    container_name: bcwhoami
    image: containous/whoami
    restart: always
    networks:
      - bcapp
volumes:
  web:
  proxy:
  graph:
  whoami:
networks:
  bcapp: 
    external: true 